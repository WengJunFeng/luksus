#### FUNCTIONS ######

# SHOW LOGO, BUT DO IT OPTIMALLY BY DETERMINING TERMINAL SIZE
DISPLAYLOGO()
{
if [ $width -gt 119 ] 
then
  tail -n 12 LUKSUS.logo
  else
  head -n 6 LUKSUS.logo
fi
}

LOOPBACKMETHOD()
{
  if [[ $device = *loop* ]]
  then
    echo Running Linux
    echo Okay we are using $device ... Beginning loopbackmethod
    head -c $luksfilesize /dev/zero > $luksfile
    losetup $device $luksfile
  elif [[ $device = *vn* ]]
    then
    echo DragonFlyBSD - Nice...
    echo Okay we are using $device ... Beginning loopbackmethod
    ghead -c $luksfilesize /dev/zero > $luksfile
    # vnconfig needs to run once first, it seems that the kernel
    # is initializing something on first run
    vnconfig 1>/dev/null 2>/dev/null
    vnconfig $device $luksfile
  else
    echo "Okay, not using a loopback device, proceeding in normal mode"
  fi

}  


DONTSHREDIFLOOPBACK()
{
  if [[ $device != *loop* ]]
  then
    echo Okay we are using $device ... Which is not a loopback device
    echo Shredding ...
    # shred
    # Totally infuse the drive with random data
    # Good for paranoid and security minded people
    # This takes about 5 hours on a 3TB drive
    shred -f -v -n1 $device
  elif [[ $device != *vn* ]]
  then
    echo On DragonFlyBSD
    echo in the middle of the shredding.place
    gshred -f -v -n1 $device
  else 
    echo "Okay, $device is a loopback device, not shredding."
  fi
}  

ASKUSERVERIFY()
{
dialog --title "WELCOME TO $programname" \
--msgbox "\n 
\n
VERSION: $version\n
DATE   : $date \n
 \n
" 50 50

echo ################################################
echo DRIVE ENCRYPTION
echo THIS SCRIPT ASSUMES YOU WANT TO COMPLETELY ERASE
echo THE DEVICE YOU HAVE SPECIFIED
echo ################################################

dialog --title "DRIVE ENCRYPTION SCRIPT" \
--msgbox "\n DETAILS AS SUBMITTED BY THE USER
\n \n \n
NAME: 	        $name \n
DRIVE:         $device \n
MOUNTPOINT:    $mountpoint \n
KEYFILE:       $keyfile \n
HEADER BACKUP: $headerfile\n
FILECONTAINER LOCATION: $luksfile
FILECONTAINER SIZE: $luksfilesize
" 50 50


echo ################################################
echo DETAILS AS SUBMITTED BY THE USER
echo PLEASE VERIFY THAT THESE ARE CORRECT
echo DRIVE: $device
echo NAME: $name
echo KEYFILE: $keyfile
echo MOUNTPOINT: $mountpoint
echo HEADER BACKUP: $headerfile
echo ################################################
echo UNDERSTAND THAT YOU WILL NUKE YOUR DRIVE: $device
echo HIT CTRL+C NOW TO QUIT, OR HIT ANY KEY TO CONTINUE
read || exit
}


CREATEANDMOUNTFS()
{
if [ $UNAME = DragonFly ] ;
then
echo DragonFlyBSD mode
# ON DRAGONFLY, WE MUST USE THE UFS FILESYSTEM INSTEAD
newfs /dev/mapper/$name
# mounting
mount /dev/mapper/$name /mnt/$name
else
# mkfs.ext4 - create a filesystem on top of the encrypted drive
mkfs.ext4 /dev/mapper/$name
if [ $? -ne 0 ] ; then
    mkfs.ext4 -F $device
    fi
# mounting the newly created drive
mount -t ext4 /dev/mapper/$name $mountpoint > /dev/null 2>&1
if [ $? -ne 0 ] ; then
    mount -t ext4 $device $mountpoint > /dev/null 2>&1
    fi
fi

}
